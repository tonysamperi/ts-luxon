{
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "tsconfig.json",
        "tsconfigRootDir": "./",
        "sourceType": "module"
    },
    "plugins": [
        "@typescript-eslint/eslint-plugin"
    ],
    "extends": [
        "plugin:@typescript-eslint/recommended"
    ],
    "root": true,
    "env": {
        "node": true,
        "jest": true
    },
    "ignorePatterns": [
        "test/**/*",
        "*.js"
    ],
    "rules": {
        "accessor-pairs": [
            "error",
            {
                "getWithoutSet": true,
                "setWithoutGet": true,
                "enforceForClassMembers": false
            }
        ],
        "eol-last": "warn",
        "grouped-accessor-pairs": [
            "error",
            "setBeforeGet"
        ],
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/interface-name-prefix": "off",
        "@typescript-eslint/explicit-function-return-type": "warn",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/member-ordering": [
            "error",
            {
                "default": {
                    "order": "alphabetically",
                    "memberTypes": [
                        [
                            "set",
                            "get"
                        ]
                    ]
                },
                "interfaces": {
                    "order": "alphabetically"
                },
                "classes": {
                    "order": "alphabetically",
                    "memberTypes": [
                        [
                            "public-static-set",
                            "public-static-get"
                        ],
                        [
                            "protected-static-set",
                            "protected-static-get"
                        ],
                        "public-static-field",
                        "protected-static-field",
                        "private-static-field",
                        [
                            "private-static-set",
                            "private-static-get"
                        ],
                        [
                            "public-decorated-set",
                            "public-decorated-get",
                            "public-instance-set",
                            "public-instance-get"
                        ],
                        [
                            "protected-decorated-set",
                            "protected-decorated-get",
                            "protected-instance-set",
                            "protected-instance-get"
                        ],
                        [
                            "private-decorated-set",
                            "private-decorated-get",
                            "private-instance-set",
                            "private-instance-get"
                        ],
                        "public-field",
                        "protected-field",
                        "private-field",
                        "constructor",
                        "public-static-method",
                        "protected-static-method",
                        "private-static-method",
                        "public-instance-method",
                        "protected-instance-method",
                        "private-instance-method"
                    ]
                }
            }
        ],
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": "default",
                "format": [
                    "camelCase"
                ]
            },
            {
                "selector": "objectLiteralProperty",
                "format": null,
                "modifiers": [
                    "requiresQuotes"
                ]
            },
            {
                "selector": "objectLiteralProperty",
                "format": [
                    "camelCase",
                    "snake_case"
                ]
            },
            {
                "selector": "variable",
                "format": [
                    "camelCase"
                ],
                "leadingUnderscore": "forbid"
            },
            {
                "selector": "variable",
                "modifiers": [
                    "exported"
                ],
                "format": [
                    "camelCase",
                    "UPPER_CASE"
                ],
                "leadingUnderscore": "forbid"
            },
            {
                "selector": "parameter",
                "format": [
                    "camelCase"
                ],
                "leadingUnderscore": "forbid"
            },
            {
                "selector": "parameter",
                "modifiers": [
                    "unused"
                ],
                "format": [
                    "camelCase"
                ],
                "leadingUnderscore": "require",
                "trailingUnderscore": "require"
            },
            {
                "selector": "memberLike",
                "modifiers": [
                    "public",
                    "static",
                    "readonly"
                ],
                "format": [
                    "UPPER_CASE"
                ],
                "leadingUnderscore": "forbid"
            },
            {
                "selector": "memberLike",
                "modifiers": [
                    "protected",
                    "static",
                    "readonly"
                ],
                "format": [
                    "UPPER_CASE"
                ],
                "leadingUnderscore": "require"
            },
            {
                "selector": "memberLike",
                "modifiers": [
                    "private",
                    "static",
                    "readonly"
                ],
                "format": [
                    "UPPER_CASE"
                ],
                "leadingUnderscore": "require"
            },
            {
                "selector": "memberLike",
                "modifiers": [
                    "public"
                ],
                "format": [
                    "camelCase"
                ],
                "leadingUnderscore": "forbid"
            },
            {
                "selector": "memberLike",
                "modifiers": [
                    "protected"
                ],
                "format": [
                    "camelCase"
                ],
                "leadingUnderscore": "require"
            },
            {
                "selector": "memberLike",
                "modifiers": [
                    "private"
                ],
                "format": [
                    "camelCase"
                ],
                "leadingUnderscore": "require"
            },
            {
                "selector": "accessor",
                "modifiers": [
                    "static",
                    "public"
                ],
                "format": [
                    "UPPER_CASE",
                    "camelCase"
                ],
                "leadingUnderscore": "forbid"
            },
            {
                "selector": "accessor",
                "modifiers": [
                    "static",
                    "protected"
                ],
                "format": [
                    "UPPER_CASE",
                    "camelCase"
                ],
                "leadingUnderscore": "require"
            },
            {
                "selector": "accessor",
                "modifiers": [
                    "static",
                    "private"
                ],
                "format": [
                    "UPPER_CASE"
                ],
                "leadingUnderscore": "require"
            },
            {
                "selector": "typeLike",
                "format": [
                    "PascalCase"
                ]
            },
            {
                "selector": "enumMember",
                "format": [
                    "UPPER_CASE"
                ]
            },
            {
                "selector": "import",
                "format": null
            }
        ]
    }
}